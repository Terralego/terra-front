name: CI

on:
  push:
    branches:
      - '*' # TODO: master
  release:
    types:
      - created
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --cache ~/.npm --prefer-offline --no-audit

      - name: Run lint
        run: |
          npm run lint

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --cache ~/.npm --prefer-offline --no-audit

      - name: Run Tests
        run: |
          npm run coverage

  build-package:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --cache ~/.npm --prefer-offline --no-audit

      - name: Launch build
        run: |
          npm run build

      - name: Archive package artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            /home/runner/work/terra-front/dist

  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --cache ~/.npm --prefer-offline --no-audit

      - name: Launch build
        run: |
          npm run build-storybook -- --quiet

      - name: Archive storybook artifact
        uses: actions/upload-artifact@v2
        with:
          name: storybook-static
          path: |
            /home/runner/work/terra-front/storybook-static/

  deploy-storybook:
    name: Deploy StoryBook
    runs-on: ubuntu-latest
    needs: [lint, tests, build-storybook]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2

      - name: Download storybook artifacts
        uses: actions/download-artifact@v2
        with:
          name: storybook-static

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}
          cache: 'npm'

      - name: Install netlify cli
        run: |
          npm i -g netlify-cli

      - name: Deploy storybook
        run:
          npx netlify deploy
            --site=$NETLIFY_SITE_ID
            --auth=$NETLIFY_ACCESS_TOKEN
            --dir=./storybook-static
            --message "${{ github.sha }} ${{ github.ref_name }}"
            --prod

  deploy-npm:
    name: Deploy package to NPM registry
    runs-on: ubuntu-latest
    needs: [lint, tests, build-package]
    if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
    steps:
      - uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}
          cache: 'npm'

      - name: Add token
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}">~/.npmrc

      - name: Publish
        run: |
          npm run publish
